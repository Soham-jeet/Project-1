{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","counter","setCounter","style","display","flexDirection","alignItems","justifyContent","fontSize","position","width","height","top","color","marginRight","backgroundColor","borderRadius","onClick","marginLeft","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4LA0EeA,EArEH,WAEZ,MAA8BC,mBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAcA,OAEC,sBACCC,MAAO,CACLC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,eAAgB,SAChBC,SAAU,OACVC,SAAU,WACVC,MAAO,MACPC,OAAQ,MACRC,IAAK,OACLC,MAAO,OAXV,UAaG,8CACH,qBACCV,MAAO,CACLK,SAAU,OACVC,SAAU,WACVG,IAAK,MACLC,MAAM,UALT,SAOEZ,IAEF,gCACC,wBACEE,MAAO,CACLK,SAAU,OACVC,SAAU,WACVG,IAAK,OACLE,YAAa,MACbC,gBAAiB,QACjBC,aAAc,MACdH,MAAO,SAEXI,QA/CmB,WAEpBf,EAAWD,EAAU,IAmCpB,6BAWA,wBACEE,MAAO,CACLK,SAAU,OACVC,SAAU,WACVG,IAAK,OACLM,WAAY,MACZH,gBAAiB,OACjBC,aAAc,MACdH,MAAO,SAEXI,QApDmB,WAEpBf,EAAWD,EAAU,IAwCpB,oCC9CakB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.a03566bf.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\n// Importing app.css is css file to add styling\nimport \"./App.css\";\n\nconst App = () => {\n// Counter is a state initialized to 0\nconst [counter, setCounter] = useState(0)\n\n// Function is called everytime increment button is clicked\nconst handleClick1 = () => {\n\t// Counter state is incremented\n\tsetCounter(counter + 1)\n}\n\n// Function is called everytime decrement button is clicked\nconst handleClick2 = () => {\n\t// Counter state is decremented\n\tsetCounter(counter - 1)\n}\n\nreturn (\n\t\n\t<div\n  style={{\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    fontSize: '400%',\n    position: 'absolute',\n    width: '98%',\n    height: '98%',\n    top: '-14%',\n    color: \"red\"\n  }}>\n    <h4>Count Values</h4>\n\t<div\n  style={{\n    fontSize: '120%',\n    position: 'relative',\n    top: '0vh',\n    color:\"yellow\"\n  }}>\n  {counter}\n\t</div>\n\t<div>\n\t\t<button\n    style={{\n      fontSize: '100%',\n      position: 'relative',\n      top: '20vh',\n      marginRight: '5px',\n      backgroundColor: 'green',\n      borderRadius: '-3%',\n      color: 'white',\n    }}\n\t\tonClick={handleClick1}> Increase value</button>\n\t\t<button\n    style={{\n      fontSize: '100%',\n      position: 'relative',\n      top: '20vh',\n      marginLeft: '5px',\n      backgroundColor: 'blue',\n      borderRadius: '-3%',\n      color: 'white',\n    }}\n\t\tonClick={handleClick2}> Decrease Value</button>\n\t</div>\n\t</div>\n)\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}